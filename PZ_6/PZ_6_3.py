# Дано множество А из точек N (точки заданы своими координатами x, y).
# Среди всех точек этого множества, лежащих во второй четверти, найти точку
# наиболее удаленную от начала координат.
# Если таких точек нет, то вывести точку с нулевыми координатами.
from math import *
import random


a = []  # Пустой список для значений расстояния
maxi_X = 0  # Стартовая координата самой удаленной точки (х)
maxi_Y = 0  # Стартовая координата самой удаленной точки (y)


def cor(x1, y1, x2, y2):
    R = sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2))
    a.append(R)


x2 = 0  # Абцисса начала координат
y2 = 0  # Ордината начала координат
maxi = 0  # Стартовое максимальное значение расстояния
try:
    N = int(input('Введите количество точек: '))
    X = []  # Начальный список абцисс
    Y = []  # Начальный список ординат
    X1 = []  # Список подходящих абцисс точек
    Y1 = []  # Список подходящих ординат точек
    b = N  # Счетчик для цикла
    while b != 0:
        X.append(random.randint(-10, 10))
        Y.append(random.randint(-10, 10))
        b -= 1
    for i in range(0, len(X)):
        if (X[i] <= 0) and (Y[i] >= 0):  # Проверка условия, что точка находится во 2 четверти
            X1.append(X[i])
            Y1.append(Y[i])
    print(f'Абциссы точек: {X}\nОрдинаты: {Y}')
    print(f'Подходящие абциссы: {X1}\nОрдинаты: {Y1}')
    if len(X1) != 0:  # Проверяем есть ли подходящие точки
        for j in range(0, len(X1)):
            cor(X1[j], Y1[j], x2, y2)
        for l in range(0, len(a)):
            if maxi < a[l]:  # Находим максимальное значение расстояния
                maxi = a[l]
                maxi_X = X1[l]  # Записываем координаты самых удаленных точек
                maxi_Y = Y1[l]
            else:
                continue
        print(f'Наиболее удалённые от начала координат: ({maxi_X}, {maxi_Y})')
    else:
        print(f'Наиболее удалённые от начала координат: ({maxi_X}, {maxi_Y})')
except TypeError:
    print('Введите целое число')

